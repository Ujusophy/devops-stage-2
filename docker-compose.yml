version: "3.8"

services:
  frontend:
    build: ./frontend
    ports:
      - "8081:80"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://app:changethis123@db:5432/app
    env_file:
      - ./backend/.env
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
    networks:
      - backend_network

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    ports:
      - "8090:81"
    environment:
      DB_DATABASE: proxy
      DB_USER: app
      DB_PASSWORD: changethis123
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./proxy_data:/data
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx-proxy-manager:/app/data
    restart: always
    networks:
      - backend_network

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data:
